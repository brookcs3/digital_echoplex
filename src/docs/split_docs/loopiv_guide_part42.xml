<P>The parameters that have many values can be selected with the FeedBack knob on the front panel while that parameter is being viewed. The FeedBack knob becomes the DataWheel. Select the parameter as usual and then turn the Feedback knob to edit the value instead of pushing the button repeatedly. Parameters with less than 127 values have them spread over the range of the knob. Note this only works from the actual knob on the front panel. A pedal connected to the feedback pedal jack does not have this function. </P>

<P>DataWheel works with: • 8th/Cycle </P>

<L>
<LI>
<Lbl>• </Lbl>

<LBody>MIDI channel </LBody>
</LI>

<LI>
<Lbl>• </Lbl>

<LBody>Source # </LBody>
</LI>

<LI>
<Lbl>• </Lbl>

<LBody>LoopTrig # </LBody>
</LI>

<LI>
<Lbl>• </Lbl>

<LBody>VolumeCont </LBody>
</LI>

<LI>
<Lbl>• </Lbl>

<LBody>FeedBkCont </LBody>
</LI>

<LI>
<Lbl>• </Lbl>

<LBody>MoreLoops </LBody>
</LI>
</L>

<P>Since the DataWheel is the Feedback knob in the playing state, the Echoplex makes some effort to avoid conflicts between feedback settings and DataWheel settings. The value for feedback is stored and maintained when you enter parameters. Using the feedback knob as the DataWheel for editing a Parameter value does not change the actual feedback setting. When you leave Parameters, feedback is still set the same as you left it. However, you should still be careful because the knob will now be in a different position. The next time you change the feedback with the knob the value will jump to the knob position. Usually it is best to remember setting it back where you want before returning to play mode. The Echoplex helps you with this if you forget, by providing a short time gap after you start moving the knob before the knob is read. So if you turn the knob quickly you can return to the value you want without getting a strange feedback setting. </P>
</Sect>

<Sect>
<H3>DataWheel Continuous Controller </H3>

<P>The Feedback knob value is transmitted by the MIDI continuous controller DataWheel (Continuous Controller #6) when in Parameters. Likewise, the Echoplex receives the DataWheel control for changing the parameter values from MIDI. </P>
</Sect>
</Sect>

<Sect>
<H1 id="LinkTarget_546">Chapter 8: Sample Dump </H1>

<Sect>
<H1>Introduction </H1>

<P>The Echoplex uses MIDI sample dump to transfer the loop you recorded to another Echoplex, sampler, or even your computer. MIDI Sample Dump is an extension of the MIDI standard which has been used by many samplers in the past 20 years. It uses Sysex to transmit the audio data. Unfortunately, not all samplers implement sample dump exactly the same way. To give you the possibility of transferring samples between a wide range of samplers we have provided new ways of changing parameters of the MIDI sample dump in the Echoplex. </P>

<P>The following chapters give a short introduction into some details of the MIDI sample dump that may help you. </P>

<Sect>
<H3>General Sample Dump </H3>

<P>Connections </P>

<P>The minimal MIDI patch is to connect the MIDI-Out of the sending unit to the MIDI-In of the receiving unit. </P>
<Figure>

<ImageData src="images/LoopIVGuide_img_1.jpg"/>
</Figure>

<P>MIDI-In MIDI-Out MIDI-In MIDI-Out </P>

<Sect>
<H5>Unit A (sender) Unit B (receiver) </H5>

<P>MIDI Dump: open loop connection </P>

<P>Unit A sends a header first, containing general information about the sample to be sent. Then it divides the sound data into packets and sends one packet at a time. </P>
</Sect>

<Sect>
<H5>Unit A (sender) Unit B (receiver) </H5>

<P>Dump Header </P>

<P>Data #1 </P>

<P>Data #2 </P>

<P>... </P>

<P>Data #8265 </P>
<Figure>

<ImageData src="images/LoopIVGuide_img_2.jpg"/>
</Figure>

