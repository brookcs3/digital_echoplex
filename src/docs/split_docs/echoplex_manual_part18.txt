The LoopWindow can be moved backwards until you reach the very initial point where the first tap of Record happened. 
LoopWindowing can give a variety of interesting effects, depending on the size of the Window and how much material is in the memory to Window through. You can even resize the Window on the fly, to capture different sized chunks of memory! 

LoopWindowing 
Continued 

CREATING THE LOOPWINDOW 
The LoopWindow is created by either Re-Multiplying a loop or doing an Unrounded Multiply. Both of these are standard techniques that are are quite useful in many cases. 
Re-Multiplying is done on a loop that has already had Multiplies or Inserts done on it, so you can see the Multiple display counting the cycles. If you press Multiply again on this loop, and then press Multiply again to end it somewhere well before the end of the loop, you will get a new loop of just that section. In this case it will be neatly rounded off to the previous cycle length. This technique allows you to chop out Cycles from the larger loop. You may want to experiment with setting Quantize=Cycle or Quantize=8th as a way to get rhythmically aligned LoopWindows. 
Unrounded Multiply is when you start a Multiply on a loop, and then end it with a press of Record. Instead of rounding off the cycle, it will stop immediately and redefine the new loop length at exactly that point. Unrounded Multiply is a great way to change rhythms by chopping out a completely new loop lengths. Using the InsertMode=SUS function is also an interesting way to create Unrounded Multiples. 
Either one of these techniques let you chop out a segment of your loop, either maintaining rhythm or not depending on what you want to do. The resulting loop is your LoopWindow. 

MOVING THE LOOPWINDOW 
Once a LoopWindow has been defined, we can move it backwards through the loop memory by pressing Undo. With each Undo press, the LoopWindow jumps back in memory by the size of the window, and 
Reference - Functions 5-23 

LoopWindowing 
Continued 
then loops over that section. You can continue moving the window backwards to the point where the initial loop was started with the first tap of Record. If a Reverse has been done on the loop, then you can only move it back to the point where Reverse was tapped. 
Moving the LoopWindow works in the same way as Undo works, so it is useful to understand the distinction between a ShortUndo and a LongUndo. (See the Undo section of this chapter for more discussion on Undo.) Basically, a long-press of Undo will jump you back a complete LoopWindow length before your current window, and is the most obvious to use. A short-press of Undo sets the LoopWindow to end at the spot where you press it and begin a LoopWindow length before that. 
For example: if you redefine the length of the LoopWindow from 8 seconds to 2 seconds, and then tap a short-press of Undo at 1.5 seconds, it is only the last .5 seconds that change in that window. The previous 1.5 seconds of the window remain intact in the new window after that initial Undo button press, except they will now be coming at the end of the LoopWindow. Your new loop will start .5 seconds before the previous LoopWindow StartPoint, and end at the 1.5 second point where you tapped Undo. 
Using ShortUndo is more complicated to understand, but is also more flexible. If you want to scroll through different sections of the loop cleanly with ShortUndo, press Undo right at the beginning of the window. This way you will really jump back a whole Window length. If you hit Undo somewhere within the boundaries of the window, you'll find that you get a blend between different memory window sections, with that blend happening at the exact point you hit Undo. So the timing of the Undo button press becomes a powerful tool for playing with the distinction between window fragments. It is especially powerful in rhythmic loops. 

MODIFYING THE LOOPWINDOW 
You can define new LoopWindow sizes at any time by doing more Re-Multiplies or Unrounded Multiplies, and then move the new LoopWindow over the loop. 

5-24 Echoplex Digital Pro Plus Users Manual 
LoopWindowing 
Continued 
Once you have a LoopWindow defined, you can do any other loop function on it that you like. For example, you can Overdub new material onto it. Pressing Undo after that will first remove the new overdubs, and then begin jumping backwards through memory of the larger loop. 
See also: Undo, Multiply 

MultiIncrease Immediate Action Play Mode 
Predetermine the final cycle count of a Multiply or Insert. 
Multiply has a feature to aid in creating very long multiplies, called MultiIncrease. MultiIncrease is also useful when you know exactly how many multiples you want to do in advance. 
Instead of waiting until the end of the Multiply to make the second press of the Multiply button, now you can immediately tap in as many Multiples as you want in the beginning of the multiplying. The Echoplex will automatically complete that many multiply Cycles for you. This same function is also available for Insert, however for simplicity we will just describe it in terms of Multiply. 
MultiIncrease is very helpful for situations where you want to have a large number of multiples and you dont want to wait to the very end to remember to press Multiply a second time. This way you can set up in advance how far it will multiply and let it go while you continue playing. MultiIncrease is in addition to the normal Multiply operation, so the standard use is not affected. 

HOW TO USE MULTI INCREASE 
Once you have started Multiply with a tap of the Multiply button, immediately tap the Multiply button again to signal you want to end. The Echoplex begins Rounding off the Multiply, just as it normally does. 
During the Rounding period, continue tapping Multiply to increase the number of Cycles you want to add. The number of Cycles where Multiply will be stopped is briefly displayed as C <number> while you are tapping Multiply. 
If you like, you can tap them in very quickly right from the beginning. Or, if you have had Multiply going for a while, using MultiIncrease simply adds to the number of multiples you already have. 

MultiIncrease 
Continued 
If you are tapping the Cycles in quickly, it is helpful to remember that the first tap of Multiply is just starting the Multiply. The second tap is where you start counting the total number of Cycles you will get. This can throw you off when you count the Multiply taps quickly, because you need to tap one extra time than the number of Cycles you want. So if you want 4 Cycles total, you need to tap five times. You might count it start  1  2  3  4. 



Example 4.x: Basic Operation of MultiIncrease 
1. 
Record a loop. 

2. 
Tap Multiply 4 times and you get: 

3. 
Youve set it to Multiply by 3 

4. 
At the third Cycle, the Multiply will stop automatically. 


Tap 1:  Start Multiply  
Tap 2:  Stop Multiply, begin Rounding  
Tap 3:  MultiIncrease (Cycles = 2)  
Tap 4:  MultiIncrease (Cycles = 3)  

MULTI INCREASE WITH QUANTIZE=LOOP 
When Quantize=Loop, MultiIncrease adds entire loops. For example, if the loop consisted of 4 Cycles, MultiIncrease counts C 8, C12, C16, etc. 
See Also: Multiply, Insert 

Multiply Immediate Action Play Mode 
Lets you overdub passages that are longer than the existing cycle. 
Multiply makes it easy to layer a 4-measure melody over a repeating 1.measure rhythm pattern, for instance. Its called "Multiply" because the original cycle is "multiplied"copied multiple timeswhile the new material is added to it. The result is a loop whose length is an integer multiple of the length of the original cycle (unless you use the Record button to end the multiplicationsee "Alternate Endings" below). 

UNQUANTIZED MULTIPLICATION 
The Multiply function is started by pressing the Multiply button. There are several ways to end the function, but the most natural and common is to press the Multiply button a second time. When you do this, you will always create a loop that consists of an integer (1, 2, 3, etc.) number of cycles. The existing cycle is repeated and mixed with the new playing, which may be several cycles long. Figure 4.5 demonstrates this behavior when Quantize=Off. 
Multiply doesnt restart the loop the instant you press it the second timeit always rounds off so that the original loop isnt cut-off in the middle. Normally it rounds up to the next cycle point. However, if you press Multiply the second time within 150ms after the cycle point, it will round down. 
When you examine Figure 4.5, youll see that there are two possible results shown, depending on the value of the RoundMode parameter. If RoundMode is set to Round, then the timing of your second press of the Multiply button isnt criticaleverything in the current cycle (measured from the first press of Multiply) is recorded. In contrast, if RoundMode is Off, then the overdubbing of the new performance stops immediately, although it still rounds off so the entire copy of the original cycle is included in the loop. 

Multiply 
Continued 





FIGURE 4.5 
Existing Loop
Basic operation of the Multiply button. 
Quantize=Off 
New Performance Button Actions 
Results when RoundMode=rnd 
Results when RoundMode=Off 





